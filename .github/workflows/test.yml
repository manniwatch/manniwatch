name: Test
on:
    push:
    pull_request:
    merge_group:
        types: [checks_requested]
    pull_request_review:
        types: [submitted]
        branches:
            - staging
concurrency:
    group: ${{ github.event_name }}-${{ github.ref }}
    cancel-in-progress: true
jobs:
    build_suite:
        runs-on: ${{ matrix.os }}
        name: Build - ${{ matrix.os }} - Node ${{ matrix.node }}
        timeout-minutes: 30
        strategy:
            max-parallel: 4
            matrix:
                node: [18, 20]
                os: [ubuntu-latest] #, windows-latest]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 200
            - name: Setup Node
              uses: actions/setup-node@v4.2.0
              with:
                  node-version: ${{ matrix.node }}
                  cache: 'npm'
            - name: Install Deps
              run: |
                  npm ci
            - name: Run Build
              run: npx lerna run build
            - name: Archive production artifacts
              uses: actions/upload-artifact@v4.6.1
              with:
                  name: build-${{matrix.os}}-${{matrix.node}}
                  path: |
                      packages/*/dist
    test_suite:
        needs: build_suite
        runs-on: ${{ matrix.os }}
        name: Test - ${{ matrix.os }} - Node ${{ matrix.node }}
        timeout-minutes: 30
        strategy:
            max-parallel: 4
            matrix:
                node: [18, 20]
                os: [ubuntu-latest] #, windows-latest]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 200
            - name: Setup Node
              uses: actions/setup-node@v4.2.0
              with:
                  node-version: ${{ matrix.node }}
                  cache: 'npm'
            - name: Install Deps
              run: |
                  npm ci
            - name: Download Build artifacts
              uses: actions/download-artifact@v4.1.9
              with:
                  name: build-${{matrix.os}}-${{matrix.node}}
                  path: ./packages
            - name: Run Test
              run: npx lerna run test:coverage
            - name: Upload coverage to Codecov Monorepo
              uses: codecov/codecov-action@v5.3.1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  flags: unit_test
                  directory: ${{ matrix.package.location }}
                  name: Test
                  fail_ci_if_error: false
                  verbose: false
    lint_suite:
        needs: build_suite
        runs-on: ${{ matrix.os }}
        name: Lint - ${{ matrix.os }} - Node ${{ matrix.node }}
        timeout-minutes: 30
        strategy:
            max-parallel: 4
            matrix:
                node: [20]
                os: [ubuntu-latest] #, windows-latest]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 200
            - name: Setup Node
              uses: actions/setup-node@v4.2.0
              with:
                  node-version: ${{ matrix.node }}
                  cache: 'npm'
            - name: Install Deps
              run: |
                  npm ci
            - name: Download Build artifacts
              uses: actions/download-artifact@v4.1.9
              with:
                  name: build-${{matrix.os}}-${{matrix.node}}
                  path: ./packages
            - name: Run Lint
              run: npx lerna run lint
    docs_suite:
        needs: build_suite
        runs-on: ${{ matrix.os }}
        name: Docs - ${{ matrix.os }} - Node ${{ matrix.node }}
        timeout-minutes: 30
        strategy:
            max-parallel: 4
            matrix:
                node: [20]
                os: [ubuntu-latest] #, windows-latest]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 200
            - name: Setup Node
              uses: actions/setup-node@v4.2.0
              with:
                  node-version: ${{ matrix.node }}
                  cache: 'npm'
            - name: Install Deps
              run: |
                  npm ci
            - name: Download Build artifacts
              uses: actions/download-artifact@v4.1.9
              with:
                  name: build-${{matrix.os}}-${{matrix.node}}
                  path: ./packages
            - name: Run Docs
              run: npx lerna run docs
    finish:
        needs: [test_suite, lint_suite, docs_suite]
        name: Finish Test
        runs-on: ubuntu-latest
        steps:
            - name: Coveralls Finished
              run: echo "Test Finished"
