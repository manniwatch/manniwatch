name: Test
on: [push,pull_request]

jobs:
  test_suite:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Setup Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Deps
        run: |
          npm ci
          npx lerna bootstrap --ci
      - name: Run Build
        run: npm run build
      - name: Run Test
        run: npm run test:coverage --no-sort
      - name: Upload coverage to Codecov
        run: ./codecov_upload.sh
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Run Lint
        run: npm run lint --no-sort
      - name: Run Docs
        run: npm run docs --no-sort
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Deploy Documentation
    if: github.event_name == 'push' # && github.ref == 'refs/heads/master'
    #needs: test_suite
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Setup Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install and Build üîß
        run: |
          npm ci
          npx lerna bootstrap --ci
          npx lerna run build
          npx lerna run docs
          node .github/workflows/prepare_docs_deploy.js
      - name: Install SSH Client üîë
        uses: webfactory/ssh-agent@v0.2.0
        with:
          ssh-private-key: ${{ secrets.DOCS_DEPLOY_KEY }}
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          SSH: true
          BRANCH: master # The branch the action should deploy to.
          FOLDER: docs # The folder the action should deploy.
          REPOSITORY_NAME: manniwatch/docs
          TARGET_FOLDER: .
