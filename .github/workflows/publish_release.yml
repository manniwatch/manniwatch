name: Publish Packages
on:
  release:
    types: [published]

jobs:
  build_suite:
    runs-on: ${{ matrix.os }}
    name: Build - ${{ matrix.os }} - Node ${{ matrix.node }}
    timeout-minutes: 30
    permissions:
      contents: read
    strategy:
      matrix:
        node: [ 16]
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 200
      - name: Setup Node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
      - name: Update NPM
        run: |
          npm install -g npm
          npm -v
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Setup Cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node${{ matrix.node }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install Deps
        run: |
          npm ci
          npx lerna bootstrap --ci
      - name: Run Build
        run: npx lerna run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2.3.1
        with:
          name: build-${{matrix.os}}-${{matrix.node}}
          path: |
            packages/*/dist
  publish_npm:
    runs-on: ${{ matrix.os }}
    needs: build_suite
    name: Publish to NPM
    permissions:
      contents: read
    strategy:
      matrix:
        node: [ 16]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - name: Download Build artifacts
        uses: actions/download-artifact@v2.1.0
        with:
          name: build-${{matrix.os}}-${{matrix.node}}
          path: ./packages
      - name: Setup Node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'
          # Defaults to the user or organization that owns the workflow file
      # Publish to GitHub Packages
      - name: Publish to NPMJS
        run: npx lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish_github:
    runs-on: ${{ matrix.os }}
    needs: build_suite
    name: Publish to Github
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        node: [ 16]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - name: Download Build artifacts
        uses: actions/download-artifact@v2.1.0
        with:
          name: build-${{matrix.os}}-${{matrix.node}}
          path: ./packages
      - name: Setup Node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@manniwatch'
      # Publish to GitHub Packages
      - name: Publish to Github
        run: npx lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
